import numpy as np
import matplotlib.pyplot as plt
from matplotlib.widgets import Slider
from random import uniform

x = np.linspace(0.1, 5, 50)
y = 1 * x ** 2 + 1 + np.array([uniform(-3, 3) for _ in range(50)])  # f(x) = 1 * x ** 2 + 1


def get_da(x, y, a, b, c):
    return (2 / len(x)) * np.sum((x ** b) * ((a * (x ** b) + c) - y))


def get_db(x, y, a, b, c):
    return (2 / len(x)) * np.sum(a * (x ** b) * (np.log(x)) * ((a * (x ** b) + c) - y))


def get_dc(x, y, a, b, c):
    return (2 / len(x)) * np.sum((a * (x ** b) + c) - y)


def power_fit(x, y, epochs, a0, b0, c0):
    a = a0
    b = b0
    c = c0
    history = {'a': [a], 'b': [b], 'c': [c]}
    for _ in range(epochs):
        a -= 0.001 * get_da(x, y, a, b, c)
        b -= 0.001 * get_db(x, y, a, b, c)
        c -= 0.001 * get_dc(x, y, a, b, c)
        history['a'].append(a)
        history['b'].append(b)
        history['c'].append(c)
    return history


history = power_fit(x, y, 2000, 1, 0.5, 0)
fig, ax = plt.subplots(figsize=(10, 6))
plt.subplots_adjust(bottom=0.25)
scatter = ax.scatter(x, y, color='blue', label='Исходные точки')
regression_line, = ax.plot(x, history['a'][0] * x ** history['b'][0] + history['c'][0],
                           'r-', label='Степенная функции')
ax.set_xlabel('x')
ax.set_ylabel('y')
ax.legend()
ax.grid(True)
ax_slider = plt.axes([0.25, 0.1, 0.65, 0.03])
slider = Slider(ax_slider, 'Эпоха', 0, 2000, valinit=0, valstep=1)


def update(val):
    epoch = int(slider.val)
    current_a = history['a'][epoch]
    current_b = history['b'][epoch]
    current_c = history['c'][epoch]
    regression_line.set_ydata(current_a * x ** current_b + current_c)
    ax.set_title(
        f'Степенная регрессия (эпоха {epoch})\n'
        f'a = {round(current_a, 3)} '
        f'b = {round(current_b, 3)}  '
        f'c = {round(current_c, 3)}'
    )
    fig.canvas.draw_idle()


slider.on_changed(update)
update(0)
plt.show()
